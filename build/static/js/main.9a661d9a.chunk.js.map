{"version":3,"sources":["components/services.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Filter","filter","setFilter","value","onChange","event","target","PersonForm","persons","setPersons","setMessage","setMessageType","useState","newName","setNewName","newNumber","setNewNumber","isPresent","ele","arr","indexOf","type","onClick","preventDefault","map","p","name","personToChange","find","idOfToChange","changedPerson","number","window","confirm","services","r","setTimeout","catch","error","concat","Persons","personsToShow","toLowerCase","match","DeleteButton","console","log","handleDeleteButton","Notification","message","style_normalMsg","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","style_errorMsg","style","App","messageType","useEffect","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9a661d9a.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios\r\n        .get(baseUrl)\r\n        .then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    return axios\r\n        .post(baseUrl, newObject)\r\n        .then(response => response.data)\r\n\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    return axios\r\n        .put(`${baseUrl}/${id}`, newObject)\r\n        .then(response=>response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n    getAll,\r\n    create,\r\n    update,\r\n    deletePerson\r\n}","import React, { useState, useEffect } from 'react'\n//import axios from 'axios'\nimport services from './components/services'\n\nconst App = () => {\n  console.log(\"app is rendering\")\n  const [persons, setPersons] = useState([])\n  const [filter, setFilter] = useState('')\n  const [message, setMessage] = useState('')\n  const [messageType, setMessageType] = useState('normal')\n  // { name: 'Arto Hellas', number: '040-123456', id: 0 },\n  // { name: 'Ada Lovelace', number: '39-44-5323523', id: 1 },\n  // { name: 'Dan Abramov', number: '12-43-234345', id: 2 },\n  // { name: 'Mary Poppendieck', number: '39-23-6423122', id: 3 }\n\n  useEffect(() => {\n    console.log(\"getting data from jsServer\")\n    services.getAll()\n      .then(data => setPersons(data))\n  }, [])\n\n  console.log('render', persons.length, 'persons')\n  console.log(persons)\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} type={messageType} />\n      <Filter filter={filter} setFilter={setFilter} />\n      <h2>add a new</h2>\n      <PersonForm persons={persons} setPersons={setPersons} setMessage={setMessage} setMessageType={setMessageType} />\n      <h2>Numbers</h2>\n      <Persons persons={persons} filter={filter} setPersons={setPersons} setMessage={setMessage} setMessageType={setMessageType} />\n    </div>\n\n  )\n}\n\nconst Filter = ({ filter, setFilter }) => {\n\n  const handelFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  return (\n    <div>\n      Name Filter (case insensitive) <input value={filter} onChange={handelFilterChange} />\n    </div>\n  )\n}\n\nconst PersonForm = ({ persons, setPersons, setMessage, setMessageType }) => {\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n\n\n\n    if (isPresent(newName, persons.map(p => p.name))) {\n      // console.log(persons.map(p => p.name))\n      // console.log(persons.map(p => p.name).indexOf(newName))\n      const personToChange = persons.find(p => p.name === newName)\n      const idOfToChange = personToChange.id\n      const changedPerson = { ...personToChange, number: newNumber }\n      if (window.confirm(newName + \" is already added to phonebook. Would you like to replace the old number?\")) {\n        services\n          .update(idOfToChange, changedPerson)\n          .then(r => {\n\n            setPersons(persons.map(p => (p.id !== idOfToChange)\n              ? p\n              : changedPerson))\n            setMessage(`${newName} 's number is updated`)\n            setMessageType('normal')\n            setTimeout(() => {\n              setMessage(null)\n              setMessageType('normal')\n            }, 3000)\n          })\n          .catch(error => {\n            // console.log(error)\n            setMessage(error.response.data.error)\n            setMessageType('error')\n            setPersons(persons.filter((p => p.id !== idOfToChange)))\n            setTimeout(() => {\n              setMessage(null)\n              setMessageType('normal')\n            }, 3000)\n          }\n          )\n\n\n        // console.log(r.data)})\n\n        setNewName('')\n        setNewNumber('')\n        return\n      }\n      else return\n    }\n\n    const newObject = {\n      name: newName,\n      number: newNumber,\n      //id: persons.length\n    }\n    services.create(newObject)\n      .then(data => {\n        setPersons(persons.concat(data))\n        setNewName('')\n        setNewNumber('')\n        setMessage(`${newName} is added`)\n        setMessageType('normal')\n        setTimeout(() => {\n          setMessage(null)\n          setMessageType('normal')\n        }, 3000)\n\n      })\n      .catch(error => {\n        // console.log(error)\n        // console.log(error.response.data.error)\n        setNewName('')\n        setNewNumber('')\n        setMessage(error.response.data.error)\n        setMessageType('error')\n        setTimeout(() => {\n          setMessage(null)\n          setMessageType('normal')\n        }, 3000)\n      })\n\n    //console.log(persons)\n  }\n\n  const isPresent = (ele, arr) => {\n    // console.log(\"arr:\", arr)\n    // console.log(ele)\n    if (arr.indexOf(ele) !== -1) return true\n    return false\n  }\n\n  return (\n    <form>\n      <div>\n        <p>name: <input value={newName} onChange={handleNameChange} /></p>\n        <p>number:<input value={newNumber} onChange={handleNumberChange} /></p>\n      </div>\n      <div>\n        <button type=\"submit\" onClick={handleSubmit}>add</button>\n      </div>\n    </form>\n  )\n}\nconst Persons = ({ persons, filter, setPersons, setMessage, setMessageType }) => {\n\n  const personsToShow = (filter === '')\n    ? persons\n    : persons.filter(p => p.name.toLowerCase().match(filter.toLowerCase()))\n\n  return (\n    <div>\n      {personsToShow.map(p =>\n        <p key={p.id}>\n          {p.name} {p.number}\n          <DeleteButton id={p.id} name={p.name} persons={persons} setPersons={setPersons} setMessage={setMessage} setMessageType={setMessageType} />\n        </p>)\n      }\n    </div>\n  )\n}\n\nconst DeleteButton = ({ id, name, persons, setPersons, setMessage, setMessageType }) => {\n\n  const handleDeleteButton = (id, name, persons, setPersons, setMessage, setMessageType) => {\n    console.log(id, name)\n    const handler = () => {\n\n      if (window.confirm(\"Delete \" + name + \" ?\")) {\n        services\n          .deletePerson(id)\n          .then(() => {\n            setPersons(persons.filter(p => p.id !== id))\n            console.log(persons)\n\n            setMessage(`${name} is removed`)\n            setMessageType('normal')\n            setTimeout(() => {\n              setMessage(null)\n            }, 3000)\n          })\n          .catch(error => {\n            setPersons(persons.filter(p => p.id !== id))\n            setMessage(error.response.data.error)\n            setMessageType('error')\n            setTimeout(() => {\n              setMessage(null)\n              setMessageType('normal')\n            }, 3000)\n          })\n\n        // .then(response => console.log(response))\n        //failed try\n        // const toDelete = [...persons]\n        // setPersons(toDelete.splice(id, 1))\n        // console.log(toDelete)\n        // console.log(persons)\n\n\n\n      }\n    }\n\n    return handler\n  }\n  return (\n    <>\n      <button onClick={handleDeleteButton(id, name, persons, setPersons, setMessage, setMessageType)}>delete</button>\n    </>\n  )\n}\n\n\nconst Notification = ({ message, type }) => {\n  //type:normal / error\n  const style_normalMsg = {\n    color: 'green',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  }\n\n  const style_errorMsg = { ...style_normalMsg, color: 'red' }\n\n  if (message) {\n    if (type === 'error') {\n      return (\n        <div style={style_errorMsg}>\n          <p>{message}</p>\n        </div>\n      )\n    }\n    else return (\n      <div style={style_normalMsg}>\n        <p>{message}</p>\n      </div>\n    )\n\n  }\n  else return null\n}\n\n\nexport default App","import ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}